name: Publish Release

on:
  push:
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+'

env:
  NAME: 'Mtd.Kiosk.Annunciator.Service'
  SLN: 'Mtd.Kiosk.Annunciator.sln'
  PUB_PROJ: 'Service/Mtd.Kiosk.Annunciator.Service.csproj'
  COPYRIGHT: 'Champaign-Urbana Mass Transit District'
  LICENSE: 'Apache-2.0'
  ICON: 'icon.png'
  README: 'README.md'
  REPO: 'git@github.com:CUMTD/Mtd.Kiosk.Annunciator.git'
  DESCRIPTION: 'MTD Kiosk Annunciator Service'
  TAG_NAME: ${{ github.event.release.tag_name }}
  OUTPUT: 'dist'

jobs:
  build-pub:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    strategy:
      matrix:
        rid: ['linux-x64', 'linux-arm', 'linux-arm64', 'win-x64', 'win-x86', 'win-arm64']
    env:
      RID: ${{ matrix.rid }}
      OUTDIR: $OUTPUT/$RID
      ZIPNAME: $OUTPUT/v$VERSION-$RID.zip
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0.x' # SDK Version to use.
      - name: Set VERSION variable from tag
        run: |
          echo "VERSION=${GITHUB_REF/refs\/tags\/v/}" >> $GITHUB_ENV

      # Restore Nuget Packages, Build, And Publish
      # This will create a release in dist/<rid>/
      # example: dist/linux-x64
      - name: Create the package
        run: dotnet publish $PUB_PROJ --runtime $RID -p:Version=$VERSION -p:PackageVersion=$VERSION -p:Copyright="$COPYRIGHT" -p:PackageRequireLicenseAcceptance=false -p:PackageLicenseExpression="$LICENSE" -p:PackageIcon="$ICON" -p:PackageReadmeFile="$README" -p:RepositoryUrl="$REPO" -p:RepositoryType=git -p:Description="$DESCRIPTION" -p:IncludeSymbols=true -p:SymbolPackageFormat=snupkg --configuration Release --output $OUTDIR

      - name: Zip Package
        run: zip -jr "$ZIPNAME" "./$OUTDIR/"

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          generate_release_notes: true
          draft: false
          prerelease: false
          fail_on_unmatched_files: true
          files: "**/*.zip"
